{"version":3,"sources":["components/DashboardHeader.js","components/DashboardNav.js","constants/ActionTypes.js","actions/index.js","components/DashboardTaskForm.js","components/HeaderTitle.js","components/HeaderDesc.js","components/Search.js","components/Filter.js","components/HeaderControl.js","components/WorkItem.js","components/WorkList.js","App.js","reportWebVitals.js","reducers/tasks.js","reducers/isDisplayForm.js","reducers/itemEditing.js","reducers/searchTask.js","reducers/filterTask.js","reducers/index.js","index.js"],"names":["DashboardHeader","className","src","alt","Component","DashboardNav","role","LIST_TASK","SAVE_TASK","TOGGLE_FORM","CLOSE_FORM","OPEN_FORM","UPDATE_STATUS_TASK","DELETE_TASK","EDIT_TASK","SEARCH_TASK","FILTER_TASK","closeForm","type","types","openForm","editTask","task","DashboardTaskForm","onChange","event","target","name","value","setState","onClear","props","onClearTask","id","category","day","status","onCloseForm","onSubmit","preventDefault","onSaveTask","state","toggleDashBoard","this","itemEditing","nextProps","isDisplayForm","placeholder","onClick","connect","dispatch","actions","HeaderTitle","HeaderDesc","Search","onSearchTask","keyword","searchTask","Filter","onFilterTask","filter","filterTask","HeaderControl","WorkItem","onDeleteTask","onUpdate","onOpenForm","onEditTask","handleDayOfWeek","handleIconCategory","iconCate","onUpdateStatusTask","WorkList","tasks","toLowerCase","indexOf","elmTasks","map","App","$","toggleClass","onToggleForm","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","findIndex","result","forEach","index","string_4","Math","floor","random","toString","substring","randomID","data","JSON","parse","localStorage","getItem","initialState","myReducer","action","alert","newTask","parseInt","push","setItem","stringify","splice","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"wOAoBeA,E,4JAjBb,WACE,OACE,sBAAKC,UAAU,mBAAf,UACE,qBAAKA,UAAU,wBAAf,SACE,qBACEC,IAAI,6EACJC,IAAI,WAGR,qBAAKF,UAAU,0BAAf,SACE,iD,GAXoBG,aCiBfC,E,4JAhBb,WACE,OACE,oBAAIJ,UAAU,gBAAd,SACE,qBAAIA,UAAU,0BAAd,UACE,+BACE,mBAAGA,UAAU,kBAEf,oBAAGK,KAAK,SAAR,UACE,mBAAGL,UAAU,iBADf,yB,GARiBG,a,cCFdG,EAAY,YACZC,EAAY,YACZC,EAAc,cACdC,EAAa,aACbC,EAAY,YACZC,EAAqB,qBACrBC,EAAc,cACdC,EAAY,YACZC,EAAc,cACdC,EAAc,cCYdC,EAAY,WACvB,MAAO,CACLC,KAAMC,IAIGC,EAAW,WACtB,MAAO,CACLF,KAAMC,IAkBGE,EAAW,SAACC,GACvB,MAAO,CACLJ,KAAMC,EACNG,SC9CEC,E,4MA2BJC,SAAW,SAACC,GACV,IAAIC,EAASD,EAAMC,OACfC,EAAOD,EAAOC,KACdC,EAAQF,EAAOE,MACnB,EAAKC,SAAL,eACGF,EAAOC,K,EAGZE,QAAU,WACR,EAAKC,MAAMC,YAAY,CACrBC,GAAI,GACJN,KAAM,GACNO,SAAU,WACVC,IAAK,IACLC,QAAQ,K,EAGZC,YAAc,WACZ,EAAKN,MAAMM,e,EAEbC,SAAW,SAACb,GACVA,EAAMc,iBACN,EAAKR,MAAMS,WAAW,EAAKC,OAC3B,EAAKX,UACL,EAAKO,cACL,EAAKN,MAAMW,mB,uDAnDb,WACMC,KAAKZ,MAAMa,aAA6C,OAA9BD,KAAKZ,MAAMa,YAAYX,GACnDU,KAAKd,SAAS,CACZI,GAAIU,KAAKZ,MAAMa,YAAYX,GAC3BN,KAAMgB,KAAKZ,MAAMa,YAAYjB,KAC7BO,SAAUS,KAAKZ,MAAMa,YAAYV,SACjCC,IAAKQ,KAAKZ,MAAMa,YAAYT,IAC5BC,OAAQO,KAAKZ,MAAMa,YAAYR,SAGjCO,KAAKb,Y,uCAGT,SAA0Be,GACpBA,GAAaA,EAAUD,YACzBD,KAAKd,SAAS,CACZI,GAAIY,EAAUD,YAAYX,GAC1BN,KAAMkB,EAAUD,YAAYjB,KAC5BO,SAAUW,EAAUD,YAAYV,SAChCC,IAAKU,EAAUD,YAAYT,IAC3BC,OAAQS,EAAUD,YAAYR,SAGhCO,KAAKb,Y,oBA8BT,WACE,IAAQG,EAAOU,KAAKZ,MAAMa,YAAlBX,GACR,OAAOU,KAAKZ,MAAMe,cAChB,qBAAK7C,UAAU,WAAf,SACE,uBAAMqC,SAAUK,KAAKL,SAArB,UACE,sBAAKrC,UAAU,aAAf,UACE,6CACA,uBACEiB,KAAK,OACL6B,YAAY,mBACZpB,KAAK,OACLC,MAAOe,KAAKF,MAAMd,KAClBH,SAAUmB,KAAKnB,WAEjB,6CACA,yBACEG,KAAK,WACLC,MAAOe,KAAKF,MAAMP,SAClBV,SAAUmB,KAAKnB,SACfvB,UAAU,WAJZ,UAME,wBAAQ2B,MAAM,WAAd,sBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,UAAd,wBAEF,kCACE,4CACA,4CAEF,yBACED,KAAK,SACLC,MAAOe,KAAKF,MAAML,OAClBZ,SAAUmB,KAAKnB,SACfvB,UAAU,SAJZ,UAME,wBAAQ2B,OAAO,EAAf,qBACA,wBAAQA,OAAO,EAAf,qBAEF,yBACED,KAAK,MACLC,MAAOe,KAAKF,MAAMN,IAClBX,SAAUmB,KAAKnB,SACfvB,UAAU,MAJZ,UAME,wBAAQ2B,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,qBACA,wBAAQA,MAAO,EAAf,uBACA,wBAAQA,MAAO,EAAf,sBACA,wBAAQA,MAAO,EAAf,oBACA,wBAAQA,MAAO,EAAf,sBACA,wBAAQA,MAAO,EAAf,4BAGJ,sBAAK3B,UAAU,aAAf,UACE,wBAAQiB,KAAK,SAAb,SAA8B,KAAPe,EAAY,MAAQ,SAC3C,wBAAQf,KAAK,SAAS8B,QAASL,KAAKb,QAApC,4BAON,O,GAtH0B1B,aAgJjB6C,eArBS,SAACR,GACvB,MAAO,CACLK,cAAeL,EAAMK,cACrBF,YAAaH,EAAMG,gBAII,SAACM,GAC1B,MAAO,CACLV,WAAY,SAAClB,GACX4B,EDjIkB,SAAC5B,GACvB,MAAO,CACLJ,KAAMC,EACNG,QC8HW6B,CAAiB7B,KAE5Be,YAAa,WACXa,EAASC,MAEXnB,YAAa,SAACV,GACZ4B,EAASC,EAAiB7B,QAKjB2B,CAA6C1B,GCxI7C6B,E,4JATb,WACE,OACE,qBAAKnD,UAAU,eAAf,SACE,kD,GAJkBG,aCcXiD,E,4JAbb,WACE,OACE,sBAAKpD,UAAU,qBAAf,UACE,uCACQ,yCADR,4DAIA,sG,GARiBG,aCEnBkD,E,4MACJ9B,SAAW,SAACC,GACV,IACIG,EADSH,EAAMC,OACAE,MACnB,EAAKG,MAAMwB,aAAa3B,I,4CAE1B,WACE,IAAQ4B,EAAYb,KAAKZ,MAAjByB,QACR,OACE,qBAAKvD,UAAU,yBAAf,SACE,iCACE,uBACEiB,KAAK,OACL6B,YAAY,iBACZpB,KAAK,UACLC,MAAO4B,EACPhC,SAAUmB,KAAKnB,WAEjB,iCACE,mBAAGvB,UAAU,6B,GAnBJG,aAyCN6C,eAdS,SAACR,GACvB,MAAO,CACLe,QAASf,EAAMgB,eAIQ,SAACP,GAC1B,MAAO,CACLK,aAAc,SAACC,GACbN,EJcoB,SAACM,GACzB,MAAO,CACLtC,KAAMC,EACNqC,WIjBWL,CAAmBK,QAKnBP,CAA6CK,GCzCtDI,E,4MACJlC,SAAW,SAACC,GACV,IACIG,EADSH,EAAMC,OACAE,MACnB,EAAKG,MAAM4B,aAAa/B,I,4CAE1B,WACE,IAAQgC,EAAWjB,KAAKZ,MAAhB6B,OACR,OACE,qBAAK3D,UAAU,uBAAf,SACE,yBACEA,UAAU,gBACV0B,KAAK,SACLC,MAAOgC,EACPpC,SAAUmB,KAAKnB,SAJjB,UAME,wBAAQvB,UAAU,gBAAgB2B,OAAQ,EAA1C,iBAGA,wBAAQ3B,UAAU,gBAAgB2B,MAAO,EAAzC,kBAGA,wBAAQ3B,UAAU,gBAAgB2B,MAAO,EAAzC,8B,GAtBWxB,aA6CN6C,eAdS,SAACR,GACvB,MAAO,CACLmB,OAAQnB,EAAMoB,eAIS,SAACX,GAC1B,MAAO,CACLS,aAAc,SAACC,GACbV,ELiBoB,SAACU,GACzB,MAAO,CACL1C,KAAMC,EACNyC,UKpBWT,CAAmBS,QAKnBX,CAA6CS,GClC7CI,E,4JAVb,WACE,OACE,sBAAK7D,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,GALoBG,aCAtB2D,E,4MACJC,aAAe,WACb,EAAKjC,MAAMiC,aAAa,EAAKjC,MAAMT,KAAKW,IACxC,EAAKF,MAAMM,e,EAEb4B,SAAW,WACT,EAAKlC,MAAMW,kBACX,EAAKX,MAAMmC,aACX,EAAKnC,MAAMoC,WAAW,EAAKpC,MAAMT,O,EAEnC8C,gBAAkB,SAACjC,GACjB,OAAQA,GACN,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,UACT,KAAK,EACH,MAAO,YACT,KAAK,EACH,MAAO,WACT,KAAK,EACH,MAAO,SACT,KAAK,EACH,MAAO,WACT,QACE,MAAO,a,EAGbkC,mBAAqB,SAACnC,GACpB,OAAQA,GACN,IAAK,WACH,MAAO,oBACT,IAAK,QACH,MAAO,iBACT,IAAK,OACH,MAAO,mBACT,IAAK,UACH,MAAO,wBACT,QACE,MAAO,K,4CAGb,WAAU,IAAD,OACCZ,EAASqB,KAAKZ,MAAdT,KACFa,EAAMQ,KAAKyB,gBAAgB9C,EAAKa,KAChCmC,EAAW3B,KAAK0B,mBAAmB/C,EAAKY,UAC9C,OACE,sBAAKjC,UAAS,yBAAoBqB,EAAKY,UAAvC,UACE,uBAAOjC,UAAU,MAAjB,SAAwBkC,IACxB,sBAAKlC,UAAU,sBAAf,UACE,+BACE,mBAAGA,UAAWqE,MAEhB,4BAAIhD,EAAKY,cAEX,qBAAKjC,UAAU,kBAAf,SAAkCqB,EAAKK,OACvC,sBAAK1B,UAAU,qBAAf,UACE,sBACEA,WAA2B,IAAhBqB,EAAKc,OAAkB,cAAgB,eAClDY,QAAS,kBAAM,EAAKjB,MAAMwC,mBAAmBjD,EAAKW,KAFpD,UAImB,IAAhBX,EAAKc,OAAkB,OAAS,YAEnC,qBAAKnC,UAAU,UACf,wBAAQiB,KAAK,SAASjB,UAAU,OAAO+C,QAASL,KAAKsB,SAArD,SACE,mBAAGhE,UAAU,iBAEf,wBAAQiB,KAAK,SAASjB,UAAU,SAAS+C,QAASL,KAAKqB,aAAvD,SACE,mBAAG/D,UAAU,6B,GAtEFG,aAkGR6C,cAAQ,MApBI,SAACC,GAC1B,MAAO,CACLqB,mBAAoB,SAACtC,GACnBiB,EPpD0B,SAACjB,GAC/B,MAAO,CACLf,KAAMC,EACNc,MOiDWkB,CAAyBlB,KAEpC+B,aAAc,SAAC/B,GACbiB,EPhDoB,SAACjB,GACzB,MAAO,CACLf,KAAMC,EACNc,MO6CWkB,CAAmBlB,KAE9BI,YAAa,WACXa,EAASC,MAEXe,WAAY,WACVhB,EAASC,MAEXgB,WAAY,SAAC7C,GACX4B,EAASC,EAAiB7B,QAKjB2B,CAAkCc,GClG3CS,E,4JACJ,WAAU,IAAD,OACDC,EAAU9B,KAAKZ,MAAf0C,MACN,EAA4B9B,KAAKZ,MAAzByB,EAAR,EAAQA,QAASI,EAAjB,EAAiBA,OACbJ,IACFiB,EAAQA,EAAMb,QAAO,SAACtC,GACpB,OAAmE,IAA5DA,EAAKK,KAAK+C,cAAcC,QAAQnB,EAAQkB,mBAUnD,IAAME,GAPNH,EAAQA,EAAMb,QAAO,SAACtC,GACpB,OAAgB,IAAZsC,EACKtC,EAEAA,EAAKc,UAAuB,IAAXwB,OAGLiB,KAAI,SAACvD,GAC1B,OACE,cAAC,EAAD,CAEEA,KAAMA,EACNoB,gBAAiB,EAAKX,MAAMW,iBAFvBpB,EAAKW,OAMhB,OAAO,qBAAKhC,UAAU,YAAf,SAA4B2E,Q,GAzBhBxE,aAqCR6C,eARS,SAACR,GACvB,MAAO,CACLgC,MAAOhC,EAAMgC,MACbjB,QAASf,EAAMgB,WACfG,OAAQnB,EAAMoB,cAIsB,KAAzBZ,CAA+BuB,G,iBC5BxCM,E,4MACJpC,gBAAkB,WAChBqC,IAAE,cAAcC,YAAY,kBAC5BD,IAAE,gBAAgBC,YAAY,WAC9BD,IAAE,gBAAgBC,YAAY,a,EAEhCC,aAAe,WACb,IAAQrC,EAAgB,EAAKb,MAArBa,YACJA,GAAkC,KAAnBA,EAAYX,GAC7B,EAAKF,MAAMmC,aAEX,EAAKnC,MAAMkD,eAEb,EAAKlD,MAAMC,YAAY,CACrBC,GAAI,GACJN,KAAM,GACNO,SAAU,WACVC,IAAK,IACLC,QAAQ,K,4CAGZ,WACE,OACE,sBAAKnC,UAAU,UAAf,UACE,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,sBAAKA,UAAU,qBAAf,UACE,cAAC,EAAD,CAAmByC,gBAAiBC,KAAKD,kBACzC,yBACExB,KAAK,SACLjB,UAAU,UACV+C,QAASL,KAAKsC,aAHhB,UAKE,mBAAGhF,UAAU,gBALf,oBASJ,qBAAKA,UAAU,UAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,yBAAQA,UAAU,SAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,sBAAMA,UAAU,OAAhB,SACE,cAAC,EAAD,CAAUyC,gBAAiBC,KAAKD,4BAKxC,sBAAMT,GAAG,wBAAwBe,QAASL,KAAKD,gBAA/C,SACE,mBAAGzC,UAAU,qC,GArDLG,aAiFH6C,eArBS,SAACR,GACvB,MAAO,CACLK,cAAeL,EAAMK,cACrBF,YAAaH,EAAMG,gBAII,SAACM,EAAUnB,GACpC,MAAO,CACLkD,aAAc,WACZ/B,ETnEG,CACLhC,KAAMC,KSoEN+C,WAAY,WACVhB,EAASC,MAEXnB,YAAa,SAACV,GACZ4B,EAASC,EAAiB7B,QAKjB2B,CAA6C6B,GClF7CI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCLRQ,EAAY,SAAClB,EAAOxC,GACxB,IAAI2D,GAAU,EAMd,OALAnB,EAAMoB,SAAQ,SAACvE,EAAMwE,GACfxE,EAAKW,KAAOA,IACd2D,EAASE,MAGNF,GAGHG,EAAW,WACf,OAAOC,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WACzBC,SAAS,IACTC,UAAU,IAGTC,EAAW,WACf,OAAON,IAAaA,IAAa,IAAMA,IAAa,IAAMA,KAGtDO,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UACvCC,EAAeL,GAAc,GAgDpBM,GA/CG,WAAmC,IAAlCnE,EAAiC,uDAAzBkE,EAAcE,EAAW,uCAClD,OAAQA,EAAO3F,MACb,KAAKC,EACH,OAAOsB,EACT,KAAKtB,EACH,GAAyB,KAArB0F,EAAOvF,KAAKK,KACdmF,MAAM,oCACD,CACL,IAAIhB,EAAQH,EAAUlD,EAAOoE,EAAOvF,KAAKW,IACrC8E,EAAU,CACZ9E,GAAI4E,EAAOvF,KAAKW,GAChBN,KAAMkF,EAAOvF,KAAKK,KAClBO,SAAU2E,EAAOvF,KAAKY,SACtBE,OACyB,SAAvByE,EAAOvF,KAAKc,SAA4C,IAAvByE,EAAOvF,KAAKc,OAG/CD,IAAK6E,SAASH,EAAOvF,KAAKa,OAEb,IAAX2D,EACFrD,EAAMqD,GAASiB,GAEfA,EAAQ9E,GAAKoE,IACb5D,EAAMwE,KAAKF,IAEbN,aAAaS,QAAQ,QAASX,KAAKY,UAAU1E,IAE/C,OAAO,YAAIA,GAEb,KAAKtB,EACH,IAAI2E,EAAQH,EAAUlD,EAAOoE,EAAO5E,IAChC8E,EAAO,2BAAQtE,EAAMqD,IAAd,IAAsB1D,QAASK,EAAMqD,GAAO1D,SAGvD,OAFAK,EAAMqD,GAASiB,EACfN,aAAaS,QAAQ,QAASX,KAAKY,UAAU1E,IACtC,YAAIA,GAEb,KAAKtB,EACH,IAAI2E,EAAQH,EAAUlD,EAAOoE,EAAO5E,IAGpC,OAFAQ,EAAM2E,OAAOtB,EAAO,GACpBW,aAAaS,QAAQ,QAASX,KAAKY,UAAU1E,IACtC,YAAIA,GAEb,QACE,OAAOA,ICnDEmE,GAbG,WAAmC,IAAlCnE,EAAiC,wDAAXoE,EAAW,uCAClD,OAAQA,EAAO3F,MACb,KAAKC,EACH,OAAQsB,EACV,KAAKtB,EACH,OAAO,EACT,KAAKA,EACH,OAAO,EACT,QACE,OAAOsB,ICVPkE,GAAe,CACnB1E,GAAI,GACJN,KAAM,GACNO,SAAU,WACVC,IAAK,IACLC,QAAQ,GAWKwE,GATG,WAAmC,IAAlCnE,EAAiC,uDAAzBkE,GAAcE,EAAW,uCAClD,OAAQA,EAAO3F,MACb,KAAKC,EACH,OAAO0F,EAAOvF,KAChB,QACE,OAAOmB,ICFEmE,GATG,WAAmC,IAAlCnE,EAAiC,uDAD/B,GACoBoE,EAAW,uCAClD,OAAQA,EAAO3F,MACb,KAAKC,EACH,OAAO0F,EAAOrD,QAChB,QACE,OAAOf,ICIEmE,GATG,WAAmC,IAAlCnE,EAAiC,wDAD/B,EACoBoE,EAAW,uCAClD,OAAQA,EAAO3F,MACb,KAAKC,EACH,OAAO6F,SAASH,EAAOjD,QACzB,QACE,OAAOnB,ICOEmE,GARGS,YAAgB,CAChC5C,SACA3B,iBACAF,eACAa,cACAI,gBCFIyD,GAAQC,YACZX,GACAY,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,SAG1B3C,M","file":"static/js/main.81962551.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass DashboardHeader extends Component {\n  render() {\n    return (\n      <div className=\"dashboard-header\">\n        <div className=\"dashboard-header__avt\">\n          <img\n            src=\"https://raw.githubusercontent.com/nvanha/myweb/master/images/logo/logo.png\"\n            alt=\"logo\"\n          />\n        </div>\n        <div className=\"dashboard-header__title\">\n          <p>nvan.ha</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from \"react\";\n\nclass DashboardNav extends Component {\n  render() {\n    return (\n      <ul className=\"dashboard-nav\">\n        <li className=\"dashboard-item selected\">\n          <span>\n            <i className=\"fas fa-play\"></i>\n          </span>\n          <p role=\"button\">\n            <i className=\"fas fa-check\"></i>Daily Task\n          </p>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default DashboardNav;\n","export const LIST_TASK = \"LIST_TASK\";\nexport const SAVE_TASK = \"SAVE_TASK\";\nexport const TOGGLE_FORM = \"TOGGLE_FORM\";\nexport const CLOSE_FORM = \"CLOSE_FORM\";\nexport const OPEN_FORM = \"OPEN_FORM\";\nexport const UPDATE_STATUS_TASK = \"UPDATE_STATUS_TASK\";\nexport const DELETE_TASK = \"DELETE_TASK\";\nexport const EDIT_TASK = \"EDIT_TASK\";\nexport const SEARCH_TASK = \"SEARCH_TASK\";\nexport const FILTER_TASK = \"FILTER_TASK\";\n","import * as types from \"../constants/ActionTypes\";\n\nexport const listTask = () => {\n  return {\n    type: types.LIST_TASK,\n  };\n};\n\nexport const saveTask = (task) => {\n  return {\n    type: types.SAVE_TASK,\n    task,\n  };\n};\n\nexport const toggleForm = () => {\n  return {\n    type: types.TOGGLE_FORM,\n  };\n};\n\nexport const closeForm = () => {\n  return {\n    type: types.CLOSE_FORM,\n  };\n};\n\nexport const openForm = () => {\n  return {\n    type: types.OPEN_FORM,\n  };\n};\n\nexport const updateStatusTask = (id) => {\n  return {\n    type: types.UPDATE_STATUS_TASK,\n    id,\n  };\n};\n\nexport const deleteTask = (id) => {\n  return {\n    type: types.DELETE_TASK,\n    id,\n  };\n};\n\nexport const editTask = (task) => {\n  return {\n    type: types.EDIT_TASK,\n    task,\n  };\n};\n\nexport const searchTask = (keyword) => {\n  return {\n    type: types.SEARCH_TASK,\n    keyword,\n  };\n};\n\nexport const filterTask = (filter) => {\n  return {\n    type: types.FILTER_TASK,\n    filter,\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index\";\n\nclass DashboardTaskForm extends Component {\n  componentDidMount() {\n    if (this.props.itemEditing && this.props.itemEditing.id !== null) {\n      this.setState({\n        id: this.props.itemEditing.id,\n        name: this.props.itemEditing.name,\n        category: this.props.itemEditing.category,\n        day: this.props.itemEditing.day,\n        status: this.props.itemEditing.status,\n      });\n    } else {\n      this.onClear();\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.itemEditing) {\n      this.setState({\n        id: nextProps.itemEditing.id,\n        name: nextProps.itemEditing.name,\n        category: nextProps.itemEditing.category,\n        day: nextProps.itemEditing.day,\n        status: nextProps.itemEditing.status,\n      });\n    } else {\n      this.onClear();\n    }\n  }\n  onChange = (event) => {\n    let target = event.target;\n    let name = target.name;\n    let value = target.value;\n    this.setState({\n      [name]: value,\n    });\n  };\n  onClear = () => {\n    this.props.onClearTask({\n      id: \"\",\n      name: \"\",\n      category: \"personal\",\n      day: \"0\",\n      status: false,\n    });\n  };\n  onCloseForm = () => {\n    this.props.onCloseForm();\n  };\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSaveTask(this.state);\n    this.onClear();\n    this.onCloseForm();\n    this.props.toggleDashBoard();\n  };\n  render() {\n    const { id } = this.props.itemEditing;\n    return this.props.isDisplayForm ? (\n      <div className=\"taskform\">\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <label>New Task</label>\n            <input\n              type=\"text\"\n              placeholder=\"Write a new task\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.onChange}\n            />\n            <label>Category</label>\n            <select\n              name=\"category\"\n              value={this.state.category}\n              onChange={this.onChange}\n              className=\"category\"\n            >\n              <option value=\"personal\">Personal</option>\n              <option value=\"study\">Study</option>\n              <option value=\"work\">Work</option>\n              <option value=\"errands\">Errands</option>\n            </select>\n            <label>\n              <span>Status: </span>\n              <span>Day: </span>\n            </label>\n            <select\n              name=\"status\"\n              value={this.state.status}\n              onChange={this.onChange}\n              className=\"status\"\n            >\n              <option value={false}>Pending</option>\n              <option value={true}>Done</option>\n            </select>\n            <select\n              name=\"day\"\n              value={this.state.day}\n              onChange={this.onChange}\n              className=\"day\"\n            >\n              <option value={0}>Sunday</option>\n              <option value={1}>Monday</option>\n              <option value={2}>Tuesday</option>\n              <option value={3}>Wednesday</option>\n              <option value={4}>Thursday</option>\n              <option value={5}>Friday</option>\n              <option value={6}>Saturday</option>\n              <option value={7}>Everyday</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\">{id === \"\" ? \"Add\" : \"Edit\"}</button>\n            <button type=\"button\" onClick={this.onClear}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    ) : (\n      \"\"\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSaveTask: (task) => {\n      dispatch(actions.saveTask(task));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n    onClearTask: (task) => {\n      dispatch(actions.editTask(task));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardTaskForm);\n","import React, { Component } from \"react\";\n\nclass HeaderTitle extends Component {\n  render() {\n    return (\n      <div className=\"header-title\">\n        <h1>Daily Task</h1>\n      </div>\n    );\n  }\n}\n\nexport default HeaderTitle;\n","import React, { Component } from \"react\";\n\nclass HeaderDesc extends Component {\n  render() {\n    return (\n      <div className=\"header-description\">\n        <p>\n          Click <span>+ New</span> To create new list and wait for project\n          manager card.\n        </p>\n        <p>Don't Create a card by yourself to manage a good colaboration.</p>\n      </div>\n    );\n  }\n}\n\nexport default HeaderDesc;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index\";\n\nclass Search extends Component {\n  onChange = (event) => {\n    let target = event.target;\n    let value = target.value;\n    this.props.onSearchTask(value);\n  };\n  render() {\n    const { keyword } = this.props;\n    return (\n      <div className=\"header-control__search\">\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Search work...\"\n            name=\"keyword\"\n            value={keyword}\n            onChange={this.onChange}\n          />\n          <button>\n            <i className=\"fas fa-search\"></i>\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    keyword: state.searchTask,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchTask: (keyword) => {\n      dispatch(actions.searchTask(keyword));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index\";\n\nclass Filter extends Component {\n  onChange = (event) => {\n    let target = event.target;\n    let value = target.value;\n    this.props.onFilterTask(value);\n  };\n  render() {\n    const { filter } = this.props;\n    return (\n      <div className=\"header-control__sort\">\n        <select\n          className=\"dropdown-menu\"\n          name=\"filter\"\n          value={filter}\n          onChange={this.onChange}\n        >\n          <option className=\"sort_selected\" value={-1}>\n            All\n          </option>\n          <option className=\"sort_selected\" value={0}>\n            Done\n          </option>\n          <option className=\"sort_selected\" value={1}>\n            Pending\n          </option>\n        </select>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    filter: state.filterTask,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFilterTask: (filter) => {\n      dispatch(actions.filterTask(filter));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport Filter from \"./Filter\";\n\nclass HeaderControl extends Component {\n  render() {\n    return (\n      <div className=\"header-control\">\n        <Search />\n        <Filter />\n      </div>\n    );\n  }\n}\n\nexport default HeaderControl;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/index\";\n\nclass WorkItem extends Component {\n  onDeleteTask = () => {\n    this.props.onDeleteTask(this.props.task.id);\n    this.props.onCloseForm();\n  };\n  onUpdate = () => {\n    this.props.toggleDashBoard();\n    this.props.onOpenForm();\n    this.props.onEditTask(this.props.task);\n  };\n  handleDayOfWeek = (day) => {\n    switch (day) {\n      case 0:\n        return \"sunday\";\n      case 1:\n        return \"monday\";\n      case 2:\n        return \"tuesday\";\n      case 3:\n        return \"wednesday\";\n      case 4:\n        return \"thursday\";\n      case 5:\n        return \"friday\";\n      case 6:\n        return \"saturday\";\n      default:\n        return \"everyday\";\n    }\n  };\n  handleIconCategory = (category) => {\n    switch (category) {\n      case \"personal\":\n        return \"fas fa-user-clock\";\n      case \"study\":\n        return \"fas fa-pen-alt\";\n      case \"work\":\n        return \"fas fa-briefcase\";\n      case \"errands\":\n        return \"fas fa-clipboard-list\";\n      default:\n        return \"\";\n    }\n  };\n  render() {\n    const { task } = this.props;\n    const day = this.handleDayOfWeek(task.day);\n    const iconCate = this.handleIconCategory(task.category);\n    return (\n      <div className={`work-item demo ${task.category}`}>\n        <label className=\"day\">{day}</label>\n        <div className=\"work-item__category\">\n          <span>\n            <i className={iconCate}></i>\n          </span>\n          <p>{task.category}</p>\n        </div>\n        <div className=\"work-item__name\">{task.name}</div>\n        <div className=\"work-item__control\">\n          <span\n            className={task.status === true ? \"status true\" : \"status false\"}\n            onClick={() => this.props.onUpdateStatusTask(task.id)}\n          >\n            {task.status === true ? \"Done\" : \"Pending\"}\n          </span>\n          <div className=\"space\"></div>\n          <button type=\"button\" className=\"edit\" onClick={this.onUpdate}>\n            <i className=\"fas fa-pen\"></i>\n          </button>\n          <button type=\"button\" className=\"delete\" onClick={this.onDeleteTask}>\n            <i className=\"fas fa-trash\"></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onUpdateStatusTask: (id) => {\n      dispatch(actions.updateStatusTask(id));\n    },\n    onDeleteTask: (id) => {\n      dispatch(actions.deleteTask(id));\n    },\n    onCloseForm: () => {\n      dispatch(actions.closeForm());\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n    onEditTask: (task) => {\n      dispatch(actions.editTask(task));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(WorkItem);\n","import React, { Component } from \"react\";\nimport WorkItem from \"./WorkItem\";\nimport { connect } from \"react-redux\";\n\nclass WorkList extends Component {\n  render() {\n    let { tasks } = this.props;\n    const { keyword, filter } = this.props;\n    if (keyword) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().indexOf(keyword.toLowerCase()) !== -1;\n      });\n    }\n    tasks = tasks.filter((task) => {\n      if (filter === -1) {\n        return task;\n      } else {\n        return task.status === (filter === 0 ? true : false);\n      }\n    });\n    const elmTasks = tasks.map((task) => {\n      return (\n        <WorkItem\n          key={task.id}\n          task={task}\n          toggleDashBoard={this.props.toggleDashBoard}\n        />\n      );\n    });\n    return <div className=\"work-list\">{elmTasks}</div>;\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tasks: state.tasks,\n    keyword: state.searchTask,\n    filter: state.filterTask,\n  };\n};\n\nexport default connect(mapStateToProps, null)(WorkList);\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport DashboardHeader from \"./components/DashboardHeader\";\nimport DashboardNav from \"./components/DashboardNav\";\nimport DashboardTaskForm from \"./components/DashboardTaskForm\";\nimport HeaderTitle from \"./components/HeaderTitle\";\nimport HeaderDesc from \"./components/HeaderDesc\";\nimport HeaderControl from \"./components/HeaderControl\";\nimport WorkList from \"./components/WorkList\";\nimport $ from \"jquery\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"./actions/index\";\n\nclass App extends Component {\n  toggleDashBoard = () => {\n    $(\".dashboard\").toggleClass(\"show-dashboard\");\n    $(\".toggle-icon\").toggleClass(\"fa-plus\");\n    $(\".toggle-icon\").toggleClass(\"fa-times\");\n  };\n  onToggleForm = () => {\n    const { itemEditing } = this.props;\n    if (itemEditing && itemEditing.id !== \"\") {\n      this.props.onOpenForm();\n    } else {\n      this.props.onToggleForm();\n    }\n    this.props.onClearTask({\n      id: \"\",\n      name: \"\",\n      category: \"personal\",\n      day: \"0\",\n      status: false,\n    });\n  };\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <nav className=\"dashboard\">\n            <DashboardHeader />\n            <DashboardNav />\n            <div className=\"dashboard-add-work\">\n              <DashboardTaskForm toggleDashBoard={this.toggleDashBoard} />\n              <button\n                type=\"button\"\n                className=\"addwork\"\n                onClick={this.onToggleForm}\n              >\n                <i className=\"fas fa-plus\"></i>New Task\n              </button>\n            </div>\n          </nav>\n          <div className=\"content\">\n            <div className=\"content-inner\">\n              <header className=\"header\">\n                <HeaderTitle />\n                <HeaderDesc />\n                <HeaderControl />\n              </header>\n              <main className=\"main\">\n                <WorkList toggleDashBoard={this.toggleDashBoard} />\n              </main>\n            </div>\n          </div>\n        </div>\n        <span id=\"toggle-show-dashboard\" onClick={this.toggleDashBoard}>\n          <i className=\"toggle-icon fas fa-plus\"></i>\n        </span>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    onToggleForm: () => {\n      dispatch(actions.toggleForm());\n    },\n    onOpenForm: () => {\n      dispatch(actions.openForm());\n    },\n    onClearTask: (task) => {\n      dispatch(actions.editTask(task));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as types from \"../constants/ActionTypes\";\n\nconst findIndex = (tasks, id) => {\n  let result = -1;\n  tasks.forEach((task, index) => {\n    if (task.id === id) {\n      result = index;\n    }\n  });\n  return result;\n};\n\nconst string_4 = () => {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n};\n\nconst randomID = () => {\n  return string_4() + string_4() + \"-\" + string_4() + \"-\" + string_4();\n};\n\nconst data = JSON.parse(localStorage.getItem(\"tasks\"));\nconst initialState = data ? data : [];\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LIST_TASK:\n      return state;\n    case types.SAVE_TASK: {\n      if (action.task.name === \"\") {\n        alert(\"New Task Is Not Available!!!\");\n      } else {\n        let index = findIndex(state, action.task.id);\n        let newTask = {\n          id: action.task.id,\n          name: action.task.name,\n          category: action.task.category,\n          status:\n            action.task.status === \"true\" || action.task.status === true\n              ? true\n              : false,\n          day: parseInt(action.task.day),\n        };\n        if (index !== -1) {\n          state[index] = newTask;\n        } else {\n          newTask.id = randomID();\n          state.push(newTask);\n        }\n        localStorage.setItem(\"tasks\", JSON.stringify(state));\n      }\n      return [...state];\n    }\n    case types.UPDATE_STATUS_TASK: {\n      let index = findIndex(state, action.id);\n      let newTask = { ...state[index], status: !state[index].status };\n      state[index] = newTask;\n      localStorage.setItem(\"tasks\", JSON.stringify(state));\n      return [...state];\n    }\n    case types.DELETE_TASK: {\n      let index = findIndex(state, action.id);\n      state.splice(index, 1);\n      localStorage.setItem(\"tasks\", JSON.stringify(state));\n      return [...state];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = false;\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.TOGGLE_FORM:\n      return !state;\n    case types.CLOSE_FORM:\n      return false;\n    case types.OPEN_FORM:\n      return true;\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = {\n  id: \"\",\n  name: \"\",\n  category: \"personal\",\n  day: \"0\",\n  status: false,\n};\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.EDIT_TASK:\n      return action.task;\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = \"\";\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SEARCH_TASK:\n      return action.keyword;\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;\n","import * as types from \"../constants/ActionTypes\";\n\nconst initialState = -1;\nconst myReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.FILTER_TASK:\n      return parseInt(action.filter);\n    default:\n      return state;\n  }\n};\n\nexport default myReducer;\n","import { combineReducers } from \"redux\";\nimport tasks from \"./tasks\";\nimport isDisplayForm from \"./isDisplayForm\";\nimport itemEditing from \"./itemEditing\";\nimport searchTask from \"./searchTask\";\nimport filterTask from \"./filterTask\";\n\nconst myReducer = combineReducers({\n  tasks,\n  isDisplayForm,\n  itemEditing,\n  searchTask,\n  filterTask,\n});\n\nexport default myReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// Store\nimport { createStore } from \"redux\";\nimport myReducer from \"./reducers/index\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(\n  myReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
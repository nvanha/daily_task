{"version":3,"sources":["components/DashboardHeader.js","components/DashboardNav.js","components/DashboardTaskForm.js","components/HeaderTitle.js","components/HeaderDesc.js","components/HeaderControl.js","components/WorkItem.js","components/WorkList.js","App.js","reportWebVitals.js","index.js"],"names":["DashboardHeader","className","src","alt","Component","DashboardNav","role","DashboardTaskForm","props","onChange","event","target","name","value","setState","onClear","id","status","onCloseForm","onSubmit","preventDefault","state","this","taskEditing","nextProps","type","placeholder","onClick","HeaderTitle","HeaderDesc","HeaderControl","onFilter","filterName","filterStatus","dropdownShow","dropdownMenu","WorkItem","onUpdateStatus","task","onDelete","onUpdate","WorkList","elmTasks","tasks","map","App","toggleDashBoard","$","toggleClass","onToggleForm","isDisplayForm","onShowForm","data","index","findIndex","generateID","push","localStorage","setItem","JSON","stringify","result","forEach","splice","parseInt","filter","toLowerCase","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76dd1fd4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass DashboardHeader extends Component {\n  render() {\n    return (\n      <div className=\"dashboard-header\">\n        <div className=\"dashboard-header__avt\">\n          <img\n            src=\"https://raw.githubusercontent.com/nvanha/myweb/master/images/logo/logo.png\"\n            alt=\"logo\"\n          />\n        </div>\n        <div className=\"dashboard-header__title\">\n          <p>nvan.ha</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","import React, { Component } from \"react\";\n\nclass DashboardNav extends Component {\n  render() {\n    return (\n      <ul className=\"dashboard-nav\">\n        <li className=\"dashboard-item selected\">\n          <span>\n            <i className=\"fas fa-play\"></i>\n          </span>\n          <a role=\"button\">\n            <i className=\"fas fa-check\"></i>Daily Task\n          </a>\n        </li>\n        <li className=\"dashboard-item\">\n          <span>\n            <i className=\"fas fa-play\"></i>\n          </span>\n          <a role=\"button\">\n            <i className=\"fas fa-user-clock\"></i>Personal\n          </a>\n        </li>\n        <li className=\"dashboard-item\">\n          <span>\n            <i className=\"fas fa-play\"></i>\n          </span>\n          <a role=\"button\">\n            <i className=\"fas fa-briefcase\"></i>Work\n          </a>\n        </li>\n        <li className=\"dashboard-item\">\n          <span>\n            <i className=\"fas fa-play\"></i>\n          </span>\n          <a role=\"button\">\n            <i className=\"fas fa-handshake\"></i>Errands\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nexport default DashboardNav;\n","import React, { Component } from \"react\";\n\nclass DashboardTaskForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: \"\",\n      name: \"\",\n      status: false,\n    };\n  }\n  componentDidMount() {\n    if (this.props.taskEditing) {\n      this.setState({\n        id: this.props.taskEditing.id,\n        name: this.props.taskEditing.name,\n        status: this.props.taskEditing.status,\n      });\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.taskEditing) {\n      this.setState({\n        id: nextProps.taskEditing.id,\n        name: nextProps.taskEditing.name,\n        status: nextProps.taskEditing.status,\n      });\n    } else if (nextProps && nextProps.taskEditing === null) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        status: false,\n      });\n    }\n  }\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    if (name === \"status\") {\n      value = target.value === \"true\" ? true : false;\n    }\n    this.setState({\n      [name]: value,\n    });\n  };\n  onClear = () => {\n    this.setState({\n      id: \"\",\n      name: \"\",\n      status: false,\n    });\n    this.props.onClear();\n  };\n  onCloseForm = () => {\n    this.props.onCloseForm();\n  };\n  onSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit(this.state);\n    this.onClear();\n    this.onCloseForm();\n  };\n  render() {\n    var { id } = this.state;\n    return (\n      <div className=\"taskform\">\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Write a new task\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.onChange}\n            />\n            <select\n              name=\"status\"\n              value={this.state.status}\n              onChange={this.onChange}\n            >\n              <option value={false}>Active</option>\n              <option value={true}>Done</option>\n            </select>\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\">{id === \"\" ? \"Add\" : \"Edit\"}</button>\n            <button type=\"button\" onClick={this.onClear}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default DashboardTaskForm;\n","import React, { Component } from \"react\";\n\nclass HeaderTitle extends Component {\n  render() {\n    return (\n      <div className=\"header-title\">\n        <h1>Daily Task</h1>\n      </div>\n    );\n  }\n}\n\nexport default HeaderTitle;\n","import React, { Component } from \"react\";\n\nclass HeaderDesc extends Component {\n  render() {\n    return (\n      <div className=\"header-description\">\n        <p>\n          Click <span>+ New</span> To create new list and wait for project\n          manager card.\n        </p>\n        <p>Don't Create a card by yourself to manage a good colaboration.</p>\n      </div>\n    );\n  }\n}\n\nexport default HeaderDesc;\n","import React, { Component } from \"react\";\n\nclass HeaderControl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterName: \"\",\n      filterStatus: -1, // All: -1, Active: 0, Done: 1\n    };\n  }\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n    this.props.onFilter(\n      name === \"filterName\" ? value : this.state.filterName,\n      name === \"filterStatus\" ? value : this.state.filterStatus\n    );\n    this.setState({\n      [name]: value,\n    });\n  };\n  dropdownShow = () => {\n    this.setState({\n      dropdownMenu: !this.state.dropdownMenu,\n    });\n  };\n  render() {\n    var { filterName, filterStatus } = this.state;\n    return (\n      <div className=\"header-control\">\n        <div className=\"header-control__search\">\n          <form>\n            <input\n              type=\"text\"\n              placeholder=\"Search work...\"\n              name=\"filterName\"\n              value={filterName}\n              onChange={this.onChange}\n            />\n            <button>\n              <i className=\"fas fa-search\"></i>\n            </button>\n          </form>\n        </div>\n        <div className=\"header-control__sort\">\n          <select\n            className=\"dropdown-menu\"\n            name=\"filterStatus\"\n            value={filterStatus}\n            onChange={this.onChange}\n          >\n            <option className=\"sort_selected\" value={-1}>\n              All\n            </option>\n            <option className=\"sort_selected\" value={0}>\n              Active\n            </option>\n            <option className=\"sort_selected\" value={1}>\n              Done\n            </option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default HeaderControl;\n","import React, { Component } from \"react\";\n\nclass WorkItem extends Component {\n  onUpdateStatus = () => {\n    this.props.onUpdateStatus(this.props.task.id);\n  };\n  onDelete = () => {\n    this.props.onDelete(this.props.task.id);\n  };\n  onUpdate = () => {\n    this.props.onUpdate(this.props.task.id);\n  };\n  render() {\n    var { task } = this.props;\n    return (\n      <div className=\"work-item\">\n        <div className=\"work-item__name\">{task.name}</div>\n        <div className=\"work-item__control\">\n          <span\n            className={task.status === true ? \"status true\" : \"status false\"}\n            onClick={this.onUpdateStatus}\n          >\n            {task.status === true ? \"Done\" : \"Active\"}\n          </span>\n          <div className=\"space\"></div>\n          <button type=\"button\" className=\"edit\" onClick={this.onUpdate}>\n            <i className=\"fas fa-pen\"></i>\n          </button>\n          <button type=\"button\" className=\"delete\" onClick={this.onDelete}>\n            <i className=\"fas fa-trash\"></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WorkItem;\n","import React, { Component } from \"react\";\nimport WorkItem from \"./WorkItem\";\n\nclass WorkList extends Component {\n  onUpdateStatus;\n  render() {\n    var { tasks } = this.props;\n    var elmTasks = tasks.map((task) => {\n      return (\n        <WorkItem\n          key={task.id}\n          task={task}\n          onUpdateStatus={this.props.onUpdateStatus}\n          onDelete={this.props.onDelete}\n          onUpdate={this.props.onUpdate}\n        />\n      );\n    });\n    return <div className=\"work-list\">{elmTasks}</div>;\n  }\n}\n\nexport default WorkList;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport DashboardHeader from \"./components/DashboardHeader\";\nimport DashboardNav from \"./components/DashboardNav\";\nimport DashboardTaskForm from \"./components/DashboardTaskForm\";\nimport HeaderTitle from \"./components/HeaderTitle\";\nimport HeaderDesc from \"./components/HeaderDesc\";\nimport HeaderControl from \"./components/HeaderControl\";\nimport WorkList from \"./components/WorkList\";\nimport $ from \"jquery\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [\n        /* \n        id: unique\n        name\n        status\n      */\n      ],\n      isDisplayForm: false,\n      taskEditing: null,\n      filter: {\n        name: \"\",\n        status: -1,\n      },\n    };\n  }\n  componentDidMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      var tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks,\n      });\n    }\n  }\n  toggleDashBoard = () => {\n    $(\".dashboard\").toggleClass(\"show-dashboard\");\n    $(\".toggle-icon\").toggleClass(\"fa-plus\");\n    $(\".toggle-icon\").toggleClass(\"fa-times\");\n  };\n  onToggleForm = () => {\n    if (this.state.isDisplayForm && this.state.taskEditing !== null) {\n      this.setState({\n        isDisplayForm: true,\n        taskEditing: null,\n      });\n    } else {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        taskEditing: null,\n      });\n    }\n  };\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  };\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n    });\n  };\n  onSubmit = (data) => {\n    var index = this.findIndex(data.id);\n    var { tasks } = this.state;\n    if (index === -1) {\n      data.id = this.generateID();\n      tasks.push(data);\n    } else {\n      tasks[index] = data;\n    }\n    this.setState({\n      tasks: tasks,\n      taskEditing: null,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n  findIndex = (id) => {\n    var { tasks } = this.state;\n    var result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  };\n  onUpdateStatus = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    }\n  };\n  onUpdate = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    this.setState({\n      taskEditing: tasks[index],\n    });\n    this.toggleDashBoard();\n    this.onShowForm();\n  };\n  onDelete = (id) => {\n    var { tasks } = this.state;\n    var index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n      this.onCloseForm();\n    }\n  };\n  onClear = () => {\n    if (this.state.taskEditing !== null) {\n      this.setState({\n        taskEditing: null,\n      });\n    }\n  };\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus,\n      },\n    });\n  };\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  generateID() {\n    return this.s4() + this.s4() + \"-\" + this.s4() + \"-\" + this.s4();\n  }\n  render() {\n    var { tasks, isDisplayForm, taskEditing, filter } = this.state;\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter((task) => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n      tasks = tasks.filter((task) => {\n        if (filter.status === -1) {\n          return task;\n        } else {\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n    return (\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <nav className=\"dashboard\">\n            <DashboardHeader />\n            <DashboardNav />\n            <div className=\"dashboard-add-work\">\n              {isDisplayForm === true ? (\n                <DashboardTaskForm\n                  onSubmit={this.onSubmit}\n                  onClear={this.onClear}\n                  onCloseForm={this.onCloseForm}\n                  taskEditing={taskEditing}\n                />\n              ) : (\n                \"\"\n              )}\n              <button\n                type=\"button\"\n                className=\"addwork\"\n                onClick={this.onToggleForm}\n              >\n                <i className=\"fas fa-plus\"></i>New Task\n              </button>\n            </div>\n          </nav>\n          <div className=\"content\">\n            <div className=\"content-inner\">\n              <header className=\"header\">\n                <HeaderTitle />\n                <HeaderDesc />\n                <HeaderControl onFilter={this.onFilter} />\n              </header>\n              <main className=\"main\">\n                <WorkList\n                  tasks={tasks}\n                  onUpdateStatus={this.onUpdateStatus}\n                  onDelete={this.onDelete}\n                  onUpdate={this.onUpdate}\n                />\n              </main>\n            </div>\n          </div>\n        </div>\n        <a\n          role=\"button\"\n          id=\"toggle-show-dashboard\"\n          onClick={this.toggleDashBoard}\n        >\n          <i className=\"toggle-icon fas fa-plus\"></i>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}